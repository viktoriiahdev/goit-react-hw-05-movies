{"version":3,"file":"static/js/129.e20bc3cf.chunk.js","mappings":"sNAcA,EAZmBA,EAAAA,QAAAA,GAAH,6J,SCehB,EAbe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACRC,EAAgCD,EAAhCC,QAASC,EAAuBF,EAAvBE,WAAYC,EAAWH,EAAXG,OAEvBC,EAAO,IAAIC,KAAKH,GACtB,OACE,UAAC,EAAD,YACE,cAAGI,UAAU,iBAAb,SAA+BH,KAC/B,iBAAMG,UAAU,eAAhB,SAAgCF,EAAKG,wBACrC,cAAGD,UAAU,eAAb,SAA6BL,MAGlC,E,2BCFD,EAXoBF,EAAAA,QAAAA,GAAH,6JCkCjB,EA9BgB,WACd,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAAQ,OAAIJ,EAAWI,EAASC,QAAxB,GACvC,GAAE,CAACT,IAECG,EAEL,OAAIA,EAAQO,OAAS,GAEjB,+BACE,SAAC,EAAD,UACGP,EAAQQ,KAAI,SAAAnB,GAAM,OACjB,SAAC,EAAD,CAAwBA,OAAQA,GAAnBA,EAAOoB,GADH,SAQvB,+BACE,SAAC,EAAD,WACE,0CAIT,C","sources":["components/Review/ReviewItem.styled.jsx","components/Review/Review.jsx","components/Reviews/ReviewsList.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst ReviewItem = styled.li`\n  list-style-type: none;\n  .review {\n    &__date {\n      font-size: 14px;\n      opacity: 0.7;\n    }\n    &__text {\n    }\n  }\n`;\n\nexport default ReviewItem;\n","import PropTypes from 'prop-types';\n\nimport ReviewItem from './ReviewItem.styled';\n\nconst Review = ({ review }) => {\n  const { content, updated_at, author } = review;\n\n  const date = new Date(updated_at);\n  return (\n    <ReviewItem>\n      <p className=\"review__author\">{author}</p>\n      <span className=\"review__date\">{date.toLocaleDateString()}</span>\n      <p className=\"review__text\">{content}</p>\n    </ReviewItem>\n  );\n};\n\nexport default Review;\n\nReview.propTypes = {\n  review: PropTypes.shape({\n    content: PropTypes.string.isRequired,\n    updated_at: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nconst ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin: 0;\n  padding: 0;\n\n  max-height: 400px;\n  overflow: scroll;\n`;\n\nexport default ReviewsList;\n","import Review from 'components/Review/Review';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'service/moviesAPI';\nimport ReviewsList from './ReviewsList.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(response => setReviews(response.results));\n  }, [movieId]);\n\n  if (!reviews) return;\n\n  if (reviews.length > 0)\n    return (\n      <>\n        <ReviewsList>\n          {reviews.map(review => (\n            <Review key={review.id} review={review} />\n          ))}\n        </ReviewsList>\n      </>\n    );\n  else\n    return (\n      <>\n        <ReviewsList>\n          <p>No reviews!</p>\n        </ReviewsList>\n      </>\n    );\n};\n\nexport default Reviews;\n"],"names":["styled","review","content","updated_at","author","date","Date","className","toLocaleDateString","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","response","results","length","map","id"],"sourceRoot":""}